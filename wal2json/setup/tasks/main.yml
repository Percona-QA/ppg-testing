---
- name: Set Facts - Major version
  set_fact:
    major_version: "{{ lookup('env', 'VERSION').split('.')[0].split('-')[1] }}"
    cacheable: true

- name: Configure repository
  include_tasks: ../../../../tasks/enable_repo.yml

- name: Install Dependencies on Debian
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
      - libreadline6-dev
      - systemtap-sdt-dev
      - zlib1g-dev
      - libssl-dev
      - libpam0g-dev
      - python3-dev
      - bison
      - flex
      - libipc-run-perl
      - libtext-trim-perl
      - wget
      - gnupg
      - tzdata
      - locales
      - lsb-release
      - apt-utils
      - make
      - gcc
      - libssl-dev
      - libkrb5-dev
      - gnupg2
      - curl
      - lsb-release
      - libz-dev
      - liblz4-dev

- name: install Percona Platform for PostgreSQL deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    major_version: "{{ major_version }}"
    packages:
    - percona-postgresql
    - percona-postgresql-{{ major_version }}
    - percona-postgresql-all
    - percona-postgresql-client
    - percona-postgresql-client-{{ major_version }}
    - percona-postgresql-common
    - percona-postgresql-contrib
    - percona-postgresql-doc
    - percona-postgresql-doc-{{ major_version }}
    - percona-postgresql-plperl-{{ major_version }}
    - percona-postgresql-plpython3-{{ major_version }}
    - percona-postgresql-pltcl-{{ major_version }}
    - percona-postgresql-server-dev-{{ major_version }}
    - percona-postgresql-server-dev-all
    - percona-postgresql-{{ major_version }}-dbgsym
    - percona-postgresql-client-{{ major_version }}-dbgsym
    - percona-postgresql-plperl-{{ major_version }}-dbgsym
    - percona-postgresql-plpython3-{{ major_version }}-dbgsym
    - percona-postgresql-pltcl-{{ major_version }}-dbgsym
  environment:
    PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

- name: Clone wal2json sources
  git:
    repo: "{{ repo }}"
    version: "{{ version }}"
    dest: /tmp/wal2json
  vars:
    repo: "{{ lookup('env', 'COMPONENT_REPO') }}"
    version: "{{ lookup('env', 'COMPONENT_VERSION') }}"
  become_user: postgres

- name: Add postgres to sudoers
  become: true 
  lineinfile:
      path: /etc/sudoers
      state: present
      line: 'postgres ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

- name: Build wal2json from sources
  make:
    chdir: "/tmp/wal2json"
    params:
      USE_PGXS: 1
  become_user: postgres

- name: Install wal2json from sources
  become: true
  make:
    target: install
    chdir: "/tmp/wal2json"
    params:
      USE_PGXS: 1

- name: Set wal level
  lineinfile:
    path: /etc/postgresql/{{ major_version }}/main/postgresql.conf
    line: wal_level = logical

- name: Set wal senders
  lineinfile:
    path: /etc/postgresql/{{ major_version }}/main/postgresql.conf
    line: max_wal_senders = 10

- name: Set replication slots
  lineinfile:
    path: /etc/postgresql/{{ major_version }}/main/postgresql.conf
    line: max_replication_slots = 10

- name: Restart postgresql service
  service:
    name: postgresql
    state: restarted

- name: Test wal2json
  make:
    target: installcheck
    chdir: "/tmp/wal2json"
    params:
      USE_PGXS: 1
  become_user: postgres
  register: installcheck

- debug: var=installcheck.stdout_lines
