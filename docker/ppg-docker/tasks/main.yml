---
- name: Set Facts.
  set_fact:
    DOCKER_REPOSITORY: "{{ lookup('env', 'REPOSITORY') }}"
    PPG_VERSION: "{{ lookup('env', 'SERVER_VERSION')}}"
    TAG: "{{ lookup('env', 'DOCKER_TAG')}}"
    cacheable: true

- name: Assign TAG based on architecture and version
  set_fact:
    TAG: >-
      {{
        TAG if ansible_architecture == 'x86_64' and not TAG|regex_search('multi')
        else TAG|string + '-arm64' if ansible_architecture == 'aarch64' and not TAG|regex_search('multi')
        else TAG
      }}
  when: "ansible_architecture == 'x86_64' or ansible_architecture == 'aarch64'"

- name: Print PPG_VERSION and TAG
  debug:
    msg: "PPG_VERSION: {{ PPG_VERSION }}, TAG: {{ TAG }}"

- name: Yum update
  become: true
  command: yum -y update
  when: ansible_os_family == "RedHat"

- name: Install yum-utils
  become: true
  command: yum install -y yum-utils
  when: ansible_os_family == "RedHat"

- name: Install docker RHEL
  become: true
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  when: ansible_os_family == "RedHat"

- name: Yum update
  become: true
  command: yum -y update
  when: ansible_os_family == "RedHat"

- name: Install docker
  become: true
  command: yum install -y docker-ce docker-ce-cli containerd.io
  when: ansible_os_family == "RedHat"

- name: Start docker
  become: true
  service:
    name: docker
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Install docker.io Deb
  become: true
  apt:
    name: docker.io
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install python3-pip
  become: true
  apt:
    name: python3-pip
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: run this on OSX type systems
  debug: msg="hello from osx"
  when: ansible_distribution == 'MacOSX'

- name: Install brew
  become: true
  command: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  when: ansible_os_family == "MacOSX"

- name: Install Docker
  become: true
  command: brew cask install docker
  when: ansible_os_family == "MacOSX"

- name: show docker version
  command: docker -v
  register: results
  when: ansible_os_family == "Debian" or ansible_os_family == "MacOSX"

- debug:
    var: results.stdout

- name: show docker binary location
  command: which docker
  register: results

- debug:
    var: results.stdout

- name: Install python3-venv
  become: true
  apt:
    name: python3-venv
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install bash
  become: true
  apt:
    name: bash
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Create /tmp/docker_test directory
  file:
    path: /tmp/docker_test
    state: directory

- name: Copy settings.py
  copy:
    src: settings.py
    dest: /tmp/docker_test/settings.py
    owner: root
    group: root
    mode: 0644

- name: Copy test_docker.py
  copy:
    src: test_docker.py
    dest: /tmp/docker_test/test_docker.py
    owner: root
    group: root
    mode: 0644

- name: create python venv for testing
  shell: python3 -m venv validation
  args:
    chdir: /tmp/docker_test
  become: true

- name: Install bash
  become: true
  apt:
    name: bash
    state: latest
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Copy run.sh
  copy:
    src: run.sh
    dest: /tmp/docker_test/run.sh
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian"

- name: Create python venv and run docker testing
  script: run.sh
  args:
    chdir: /tmp/docker_test
  become: true
  environment:
    VERSION: "{{ PPG_VERSION }}"
    DOCKER_REPOSITORY: "{{ DOCKER_REPOSITORY }}"
    TAG: "{{ TAG }}"
  register: results

- debug:
    var: results.stdout
