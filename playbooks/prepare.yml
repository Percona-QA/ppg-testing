---
- name: Prepare node for running tests
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
    # - name: Edit mirrorlist for Centos8 repos
    #   shell: "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*"
    #   when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

    # - name: Edit baseurl for Centos8 repos
    #   shell: "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*"
    #   when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

    # - name: Find all of the files inside /etc/yum.repos.d directory
    #   find:
    #     paths: "/etc/yum.repos.d/"
    #     patterns: "*.repo"
    #   register: repos

    # - name: Comment 'mirrorlist' in /etc/yum.repos.d/*.repo files
    #   replace:
    #     path: "{{ item.path }}"
    #     regexp: 'mirrorlist'
    #     replace: '#mirrorlist'
    #   with_items: "{{ repos.files }}"
    #   when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    # - name: Replace 'baseurl' in /etc/yum.repos.d/*.repo files
    #   replace:
    #     path: "{{ item.path }}"
    #     regexp: '#baseurl=http://mirror.centos.org'
    #     replace: 'baseurl=http://vault.centos.org'
    #   with_items: "{{ repos.files }}"
    #   when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup ca-certificates release
      yum:
        name: ca-certificates
        update_cache: yes
        state: present
      when: ansible_os_family == "RedHat"

    - name: install GPG key for epel 8
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for Percona repos
      rpm_key:
        state: present
        key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup epel 8 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup epel release
      yum:
        name: epel-release
        update_cache: yes
        state: present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version != "8"

    - name: install needed packages for running tests with apt
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
          - unzip
          - wget
          - gnupg
          - gnupg2
          - rsync
          - acl
          - git
      retries: 60
      delay: 10
      register: result
      until: result is not failed
      when: ansible_os_family == "Debian"

    - name: update systemd-sysv integration on debian/ubuntu
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
        - systemd-sysv
      when: ansible_os_family == "Debian" and ansible_distribution_release != "trusty"

    - name: install needed packages for running tests with yum
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - pv
          - libselinux-python
          - unzip
          - wget
          - rsync
          - git-all
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: install needed packages for running tests with yum on RHEL8
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - unzip
        - wget
        - git-all
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 8

    - name: Setup additional yum packages
      yum:
        name: "{{ packages }}"
        update_cache: yes
        state: present
      vars:
        packages:
          - yum-utils
          - centos-release-scl
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: setup devtoolset-7-gcc
      yum:
        name: devtoolset-7-gcc*
        update_cache: yes
        enablerepo: centos-sclo-rh-testing
        state: present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: Install epel-release package
      ansible.builtin.dnf:
        name: epel-release
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Enable Powertools on Rocky 8
      become: true
      shell: | 
        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled powertools
      when: ansible_distribution == "Rocky" and ansible_distribution_major_version == "8"

    - name: Enable CRB on Rocky 9
      become: true
      shell: | 
        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled crb
      when: ansible_distribution == "Rocky" and ansible_distribution_major_version == "9"

    - name: Enable ol8_codeready_builder on Oracle Linux 8
      become: true
      shell: | 
        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled ol8_codeready_builder
      when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "8"

    - name: Enable ol9_codeready_builder on Oracle Linux 9
      become: true
      shell: | 
        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled ol9_codeready_builder
      when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "9"

    - name: Update Oracle Linux 8 and 9 to latest
      become: true
      shell: | 
        sudo dnf update -y 
      when: ansible_distribution == "OracleLinux"

    - name: Setup oracle linux 9 for ssh
      become: true
      shell: | 
        setenforce 0
        firewall-cmd --permanent --add-service=ssh
        firewall-cmd --reload
        systemctl enable sshd
        systemctl start sshd
      when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "9"

    - name: Install additional packages RPM
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - openssl-devel
          - readline-devel
          - gcc
          - gcc-c++
          - libevent-devel
          - perl-Pod-Checker
          - perl-devel
          - perl-JSON-XS
          - libtool
          - openssl
          - make
          - pandoc
          - pkgconfig
          - llvm-toolset-7-clang
          - llvm5.0
          - llvm-toolset-7
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: Install additional packages RPM
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - openssl-devel
          - readline-devel
          - openssl
          - gcc
          - gcc-c++
          - libevent-devel
          - perl-Pod-Checker
          - perl-devel
          - perl-JSON-XS
          - perl-Test-Simple
          - libtool
          - make
          - pandoc
          - pkgconfig
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 8

    - name: Install additional packages RPM
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - openssl-devel
          - readline-devel
          - openssl
          - gcc
          - gcc-c++
          - libevent-devel
          - perl-Pod-Checker
          - perl-devel
          - perl-JSON-XS
          - perl-Test-Simple
          - libtool
          - make
          - pandoc
          - pkgconfig
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 9

    - name: Install additional packages Debian
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - libtool
          - libevent-dev
          - m4
          - automake
          - pkg-config
          - libssl-dev
          - libreadline-dev
          - build-essential
          - pandoc
      when: ansible_os_family == "Debian"

    - name: Setup SSH keys CentOS
      ansible.posix.authorized_key:
        user: centos
        key: "{{ lookup('file', 'public_keys') }}"
        state: present
        exclusive: False
      when: ansible_distribution == "CentOS"

    - name: Setup SSH keys for Oracle Linux or Amazon
      ansible.posix.authorized_key:
        user: ec2-user
        key: "{{ lookup('file', 'public_keys') }}"
        state: present
        exclusive: False
      when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version|int == 8

    - name: Setup SSH keys for Rocky Linux or Amazon
      ansible.posix.authorized_key:
        user: rocky
        key: "{{ lookup('file', 'public_keys') }}"
        state: present
        exclusive: False
      when: ansible_distribution == "Rocky"

    - name: Setup SSH keys Debian
      ansible.posix.authorized_key:
        user: admin
        key: "{{ lookup('file', 'public_keys') }}"
        state: present
        exclusive: False
      when: ansible_distribution == "Debian"

    - name: Setup SSH keys Ubuntu
      ansible.posix.authorized_key:
        user: ubuntu
        key: "{{ lookup('file', 'public_keys') }}"
        state: present
        exclusive: False
      when: ansible_distribution == "Ubuntu"
