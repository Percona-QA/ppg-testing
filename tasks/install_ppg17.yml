
  - name: Set Facts.
    set_fact:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
      cacheable: true

  - debug:
      msg: "Value of PERCONA_TELEMETRY_URL is : {{ PERCONA_TELEMETRY_URL }}"

  - name: setup epel release
    yum:
      name: epel-release
      update_cache: yes
      state: present
    when: ansible_os_family == "RedHat"

  - name: Clean dnf rocky linux
    become: true
    command: dnf clean all -y
    when: ansible_os_family == "RedHat" and
      (ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9")

  - name: Enable powertools on rocky linux 8
    become: true
    command: dnf config-manager --set-enabled powertools
    when: ansible_os_family == "RedHat" and ansible_distribution == "Rocky" and ansible_distribution_major_version == "8"

  - name: Enable ol8_codeready_builder on Oracle linux 8
    become: true
    command: dnf config-manager --set-enabled ol8_codeready_builder
    when: ansible_os_family == "RedHat" and ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "8"

  - name: Enable powertools on rocky linux 9
    become: true
    command: dnf config-manager --set-enabled crb
    when: ansible_os_family == "RedHat" and ansible_distribution == "Rocky" and ansible_distribution_major_version == "9"

  - name: Enable ol9_codeready_builder on Oracle linux 9
    become: true
    command: dnf config-manager --set-enabled ol9_codeready_builder
    when: ansible_os_family == "RedHat" and ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "9"

  - name: Disable dnf postgresql for RHEL8
    become: true
    command: dnf module disable postgresql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Disable llvm-toolset dnf module for RHEL8
    become: true
    command: dnf module disable llvm-toolset -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install Percona Platform for PostgreSQL deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-postgresql
      - percona-postgresql-17
      - percona-postgresql-all
      - percona-postgresql-client
      - percona-postgresql-client-17
      - percona-postgresql-common
      - percona-postgresql-contrib
      - percona-postgresql-doc
      - percona-postgresql-doc-17
      - percona-postgresql-plperl-17
      - percona-postgresql-plpython3-17
      - percona-postgresql-pltcl-17
      - percona-postgresql-server-dev-17
      - percona-postgresql-server-dev-all
      - percona-postgresql-17-dbgsym
      - percona-postgresql-client-17-dbgsym
      - percona-postgresql-plperl-17-dbgsym
      - percona-postgresql-plpython3-17-dbgsym
      - percona-postgresql-pltcl-17-dbgsym
      - postgresql-client-common
      - postgresql-common
    when: ansible_os_family == "Debian"
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: install Percona Platform for PostgreSQL deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-postgresql-plpython3-17
      - percona-postgresql-plpython3-17-dbgsym
    when:
      - ansible_os_family == "Debian"

  - name: install Percona Platform for PostgreSQL rpm packages for RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-server-dev-all
      - percona-postgresql17
      - percona-postgresql17-contrib
      - percona-postgresql17-debuginfo
      - percona-postgresql17-devel
      - percona-postgresql17-docs
      - percona-postgresql17-libs
      - percona-postgresql17-llvmjit
      - percona-postgresql17-plperl
      - percona-postgresql17-plpython3
      - percona-postgresql17-pltcl
      - percona-postgresql17-server
      - percona-postgresql17-test
      - percona-postgresql17-debuginfo
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: install Percona Platform for PostgreSQL rpm packages for RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-postgresql-client-common
        - percona-postgresql-common
        - percona-postgresql17
        - percona-postgresql17-contrib
        - percona-postgresql17-debuginfo
        - percona-postgresql17-devel
        - percona-postgresql17-docs
        - percona-postgresql17-libs
        - percona-postgresql17-llvmjit
        - percona-postgresql17-plpython3
        - percona-postgresql17-plperl
        - percona-postgresql17-pltcl
        - percona-postgresql17-server
        - percona-postgresql17-test
        - percona-postgresql17-contrib-debuginfo
        - percona-postgresql17-debuginfo
        - percona-postgresql17-debugsource
        - percona-postgresql17-devel-debuginfo
        - percona-postgresql17-libs-debuginfo
        - percona-postgresql17-plperl-debuginfo
        - percona-postgresql17-pltcl-debuginfo
        - percona-postgresql17-plpython3-debuginfo
        - percona-postgresql17-server-debuginfo
    when: ansible_os_family == "RedHat" and
      (ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9")
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install postgresql-server-dev-all RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-postgresql-server-dev-all
    when: (ansible_os_family == "RedHat" and pg_version_to_install | string is version('17.4', '<=', strict=True))

  - name: Install postgresql-common-dev RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-postgresql-common-dev
    when: (ansible_os_family == "RedHat" and pg_version_to_install | string is version('17.5', '>=', strict=True))

  - name: Check if Telemetry file exisits
    stat:
        path: /usr/local/percona/telemetry_uuid
    register: telemetry_file_check

  - name: Register output of /usr/local/percona/telemetry_uuid
    become: true
    command: cat /usr/local/percona/telemetry_uuid
    register: telemetry_file_output
    when: telemetry_file_check.stat.exists

  - debug:
      msg: "Telemetry file output is : {{ telemetry_file_output }}"
    when: telemetry_file_check.stat.exists
