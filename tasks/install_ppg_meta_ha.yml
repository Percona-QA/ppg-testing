---
  - set_fact:
      version: "{{ lookup('env', 'VERSION').split('.')[0].split('-')[1] }}"

  - name: Clean dnf
    become: true
    command: dnf clean all -y
    when: ansible_os_family == "RedHat"

  - name: Disable dnf module for RHEL8
    become: true
    command: dnf module disable postgresql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Disable llvm-toolset dnf module for RHEL8
    become: true
    command: dnf module disable llvm-toolset -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Install Postgresql Server meta HA package Debian
    apt:
      name: percona-ppg-server-ha-{{ version }}
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Install Postgresql Server meta HA package RHEL
    yum:
      name: percona-ppg-server-ha{{ version }}
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install python3-pip
    yum:
      name: python3-pip
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat" and
      (ansible_distribution_major_version == "9" or ansible_distribution_major_version == "10")

  # - name: Install python3 module - patroni[etcd]
  #   become: true
  #   command: python3 -m pip install patroni[etcd]
  #   when: ansible_os_family == "RedHat"
