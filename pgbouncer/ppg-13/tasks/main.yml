---
  - name: Configure repository
    include_tasks: ../../../../tasks/enable_repo.yml

  - name: install additional packages for running tests with apt
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
        - wget
        - gnupg2
        - curl
        - lsb-release
        - vim
        - git
        - libtool
        - python3-pip
        - pkg-config
        - pandoc
        - libreadline6-dev
        - systemtap-sdt-dev
        - zlib1g-dev
        - libssl-dev
        - libpam0g-dev
        - python3-dev
        - bison
        - flex
        - libipc-run-perl
        - libevent-dev
        - python-pytest
    retries: 60
    delay: 10
    register: result
    until: result is not failed

  - name: install Percona Platform for PostgreSQL deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-postgresql
      - percona-postgresql-13
      - percona-postgresql-all
      - percona-postgresql-client
      - percona-postgresql-client-13
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-contrib
      - percona-postgresql-plperl-13
      - percona-postgresql-plpython3-13
      - percona-postgresql-pltcl-13
      - percona-postgresql-server-dev-13
      - percona-postgresql-server-dev-all

  - name: Add user postgres to sudoers
    user:
      name: postgres
      groups: sudo
      append: yes
    when: ansible_os_family == "Debian"

  - name: Clone pgbouncer sources
    git:
      repo: "{{ repo }}"
      version: "{{ version }}"
      dest: /var/lib/postgresql/pgbouncer
      recursive: yes
      update: yes
    vars:
      repo: "{{ lookup('env', 'COMPONENT_REPO') }}"
      version: "{{ lookup('env', 'COMPONENT_VERSION') }}"
    become_user: postgres

  - name: Autogen pgbouncer
    shell: ./autogen.sh
    args:
      chdir: /var/lib/postgresql/pgbouncer
    become_user: postgres

  - name: Configure pgbouncer
    shell: ./configure --prefix=/usr/local
    args:
      chdir: /var/lib/postgresql/pgbouncer
    become_user: postgres

  - name: Make pgbouncer
    shell: make
    args:
      chdir: /var/lib/postgresql/pgbouncer
    environment:
      PATH: "/usr/lib/postgresql/13/bin:{{ ansible_env.PATH }}"
    become_user: postgres

  - name: Make install pgbouncer
    shell: make install
    args:
      chdir: /var/lib/postgresql/pgbouncer
    environment:
      PATH: "/usr/lib/postgresql/13/bin:{{ ansible_env.PATH }}"
    become: true

  - name: Install pip requirements
    shell: pip3 install -r requirements.txt
    args:
      chdir: /var/lib/postgresql/pgbouncer
    environment:
      PATH: "/usr/lib/postgresql/13/bin:{{ ansible_env.PATH }}"
    become: true

  - name: Run pgbouncer tests
    shell: pytest
    args:
      chdir: /var/lib/postgresql/pgbouncer
    environment:
      PATH: "/usr/lib/postgresql/13/bin:{{ ansible_env.PATH }}"
    become_user: postgres
    register: results

  - debug:
      var: results.stdout
