---

  - name: Configure repository
    include_tasks: ../../../../tasks/enable_repo.yml

  - name: setup epel release
    yum:
      name: epel-release
      update_cache: yes
      state: present
    when: ansible_os_family == "RedHat"

  - name: Clean dnf RHEL8
    become: true
    command: dnf clean all -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Find all of the files inside /etc/yum.repos.d directory
    find:
      paths: "/etc/yum.repos.d/"
      patterns: "*.repo"
    register: repos

  - name: Comment 'mirrorlist' in /etc/yum.repos.d/*.repo files
    replace:
      path: "{{ item.path }}"
      regexp: 'mirrorlist'
      replace: '#mirrorlist'
    with_items: "{{ repos.files }}"
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Replace 'baseurl' in /etc/yum.repos.d/*.repo files
    replace:
      path: "{{ item.path }}"
      regexp: '#baseurl=http://mirror.centos.org'
      replace: 'baseurl=http://vault.centos.org'
    with_items: "{{ repos.files }}"
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Update dnf RHEL8
    become: true
    command: dnf update -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Enable powertools RHEL8
    become: true
    command: dnf config-manager --set-enabled powertools
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Disable dnf module for RHEL8
    become: true
    command: dnf module disable postgresql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Install CPAN
    become: true
    command: yum -y install perl-CPAN
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  - name: Install perl-App-cpanminus
    become: true
    command: yum -y install perl-App-cpanminus
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  - name: Install install perl-IPC-Run
    become: true
    command: yum -y install perl-IPC-Run
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  - name: Install perl module Text::Trim
    become: true
    command: cpanm Text::Trim
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  - name: Install Development tools
    become: true
    command: yum -y groupinstall "Development tools"
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  # - name: Disable llvm-toolset dnf module for RHEL8
  #   become: true
  #   command: dnf module disable llvm-toolset -y
  #   when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install Percona Platform for PostgreSQL rpm packages for RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-server-dev-all
      - percona-postgresql14
      - percona-postgresql14-contrib
      - percona-postgresql14-devel
      - percona-postgresql14-libs
      - percona-postgresql14-llvmjit
      - percona-postgresql14-plperl
      - percona-postgresql14-plpython3
      - percona-postgresql14-pltcl
      - percona-postgresql14-server
      - percona-postgresql14-test
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Initialize Postgres RHEL
    become: true
    command: /usr/pgsql-14/bin/postgresql-14-setup initdb
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

  - name: Install llvm-toolset
    become: true
    command: yum install -y llvm-toolset
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "RedHat"

  - name: Clone pg_stat_monitor sources
    git:
      repo: "{{ repo }}"
      version: "{{ version }}"
      dest: /tmp/pg_stat_monitor
    vars:
      repo: "{{ lookup('env', 'COMPONENT_REPO') }}"
      version: "{{ lookup('env', 'COMPONENT_VERSION') }}"
    become_user: postgres

  - name: Build pg_stat_monitor from sources
    make:
      chdir: "/tmp/pg_stat_monitor"
      params:
        USE_PGXS: 1

  - name: Install pg_stat_monitor from sources
    make:
      target: install
      chdir: "/tmp/pg_stat_monitor"
      params:
        USE_PGXS: 1

  - name: Add extensions to postgresql.conf for RHEL
    lineinfile:
      path: /var/lib/pgsql/14/data/postgresql.conf
      line: shared_preload_libraries = 'pg_stat_monitor'

  - name: Restart Postgres RHEL
    service:
      name: postgresql-14
      state: restarted
    register: out

  - name: Start Postgres RHEL
    service:
      name: postgresql-14
      state: started
      enabled: yes
