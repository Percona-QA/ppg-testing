---
  - name: Setting facts so that they will be persisted in the fact cache
    ansible.builtin.set_fact:
      postgis_rhel_package_name_prefix: "percona-postgis33_{{ major_version }}"

  - debug:
      msg: "Value of postgis_rhel_package_name_prefix is : {{ postgis_rhel_package_name_prefix }}"

  - name: setup epel release
    yum:
      name: epel-release
      update_cache: yes
      state: present

  - name: Clean dnf RHEL8
    become: true
    command: dnf clean all -y
    when: ansible_distribution_major_version == "8"

  - name: Install epel-release package
    ansible.builtin.dnf:
      name: epel-release
      state: present
    when: ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8"

  - name: Enable powertools on rocky linux 8
    become: true
    command: dnf config-manager --set-enabled powertools
    when: ansible_distribution_major_version == "8"

  - name: Enable crb on rocky linux 9
    become: true
    command: dnf config-manager --set-enabled crb
    when: ansible_distribution_major_version == "9"    

  - name: Disable dnf module for RHEL8
    become: true
    command: dnf module disable postgresql -y
    when: ansible_distribution_major_version == "8"

  - name: Install perl-CPAN and perl-App-cpanminus on Red Hat
    become: true
    yum:
      name: "{{ item }}"
      state: present
    loop:
      - perl-CPAN
      - perl-App-cpanminus
      - perl-IPC-Run

  - name: Install perl module Text::Trim
    become: true
    command: cpanm Text::Trim
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

  - name: LLVM Version
    command: llvm-config --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: CLANG Version
    command: clang --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: Install Development tools
    become: true
    command: yum -y groupinstall "Development tools"
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

  - name: LLVM Version
    command: llvm-config --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: CLANG Version
    command: clang --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: Enable llvm-toolset dnf module for RHEL8
    become: true
    command: dnf module enable llvm-toolset -y
    when: ansible_distribution_major_version == "8"

  - name: Install llvm-toolset
    become: true
    command: yum install -y llvm-toolset clang-devel clang
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_distribution_major_version == "8"

  - name: Install clang clang-devel on RHEL 9
    become: true
    command: yum install -y clang-devel clang
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_distribution_major_version == "9"

  - name: LLVM Version
    command: llvm-config --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: CLANG Version
    command: clang --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: install Percona Platform for PostgreSQL rpm packages for RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-common-dev
      - percona-postgresql{{ postgres_version }}
      - percona-postgresql{{ postgres_version }}-contrib
      - percona-postgresql{{ postgres_version }}-devel
      - percona-postgresql{{ postgres_version }}-libs
      - percona-postgresql{{ postgres_version }}-plperl
      - percona-postgresql{{ postgres_version }}-plpython3
      - percona-postgresql{{ postgres_version }}-pltcl
      - percona-postgresql{{ postgres_version }}-server
      - percona-postgresql{{ postgres_version }}-test
      - percona-postgresql{{ postgres_version }}-llvmjit
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
    when: ansible_distribution_major_version == "8"

  - name: install Percona Platform for PostgreSQL rpm packages for RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-common-dev
      - percona-postgresql{{ postgres_version }}
      - percona-postgresql{{ postgres_version }}-contrib
      - percona-postgresql{{ postgres_version }}-devel
      - percona-postgresql{{ postgres_version }}-libs
      - percona-postgresql{{ postgres_version }}-plperl
      - percona-postgresql{{ postgres_version }}-plpython3
      - percona-postgresql{{ postgres_version }}-pltcl
      - percona-postgresql{{ postgres_version }}-server
      - percona-postgresql{{ postgres_version }}-test
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
    when: ansible_distribution_major_version == "9"

  - name: Install pgaudit RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-pgaudit{{ postgres_version }}
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install set_user RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-pgaudit{{ postgres_version }}_set_user
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install pgrepack RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-pg_repack{{ postgres_version }}
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install percona-postgis RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - "{{postgis_rhel_package_name_prefix}}"
      - "{{postgis_rhel_package_name_prefix}}-client"
      - "{{postgis_rhel_package_name_prefix}}-client-debuginfo"
      - "{{postgis_rhel_package_name_prefix}}-debuginfo"
      - "{{postgis_rhel_package_name_prefix}}-devel"
      - "{{postgis_rhel_package_name_prefix}}-docs"
      - "{{postgis_rhel_package_name_prefix}}-gui"
      - "{{postgis_rhel_package_name_prefix}}-gui-debuginfo"
      - "{{postgis_rhel_package_name_prefix}}-llvmjit"
      - "{{postgis_rhel_package_name_prefix}}-utils"
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Initialize Postgres RHEL
    become: true
    command: /usr/pgsql-{{ major_version }}/bin/postgresql-{{ major_version }}-setup initdb
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

  - name: LLVM Version
    command: llvm-config --version
    ignore_errors: true
    register: results

  - debug:
      var: results.stdout

  - name: CLANG Version
    command: clang --version
    ignore_errors: true
    register: results

  - name: Clone pg_stat_monitor sources
    git:
      repo: "{{ repo }}"
      version: "{{ version }}"
      dest: /tmp/pg_stat_monitor
    vars:
      repo: "{{ lookup('env', 'PGSM_REPO') }}"
      version: "{{ lookup('env', 'PGSM_BRANCH') }}"
    become_user: postgres

  - name: Remove 024_check_timings test case (delete file)
    ansible.builtin.file:
      path: /tmp/pg_stat_monitor/t/024_check_timings.pl
      state: absent

  - name: Build pg_stat_monitor from sources
    make:
      chdir: "/tmp/pg_stat_monitor"
      params:
        USE_PGXS: 1

  - name: Install pg_stat_monitor from sources
    make:
      target: install
      chdir: "/tmp/pg_stat_monitor"
      params:
        USE_PGXS: 1
    when: not use_package_install

  - name: Install pg-stat-monitor RHEL RPM Package
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pg_stat_monitor{{ major_version }}
        - percona-pg_stat_monitor{{ major_version }}-debuginfo
    when: use_package_install

  - name: Add extensions to postgresql.conf for RHEL
    lineinfile:
      path: /var/lib/pgsql/{{ major_version }}/data/postgresql.conf
      line: shared_preload_libraries = 'pg_stat_monitor'

  - name: Restart Postgres RHEL
    service:
      name: postgresql-{{ major_version }}
      state: restarted
    register: out

  - name: Start Postgres RHEL
    service:
      name: postgresql-{{ major_version }}
      state: started
      enabled: yes
