---
# Tasks for test minor upgrade for PPG 11 packages

- name: Configure repository
  include_tasks: ../../../tasks/install_percona_release.yml

- name: Setting facts so that they will be persisted in the fact cache
  ansible.builtin.set_fact:
    pg_version_to_install: "{{ lookup('env', 'FROM_VERSION') | replace('ppg-','') }}"

- name: End play on oracle linux 9
  meta: end_play
  when: ansible_os_family == "RedHat" and
   ansible_distribution_major_version == "9" and
   pg_version_to_install | string is version('11.18', '<=', strict=True)

- name: Setup initial (old) repository
  command: percona-release enable {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'FROM_REPO') }}"
    pg_version: "{{ lookup('env', 'FROM_VERSION') }}"

- name: install Percona Platform for PostgreSQL 11 packages
  include_tasks: ../../../../tasks/install_ppg11.yml

- name: Initialize Postgres RHEL
  command: /usr/pgsql-11/bin/postgresql-11-setup initdb
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  when: ansible_os_family == "RedHat"

- name: Install PPG tools
  include_tasks: ../../../../tasks/install_ppg11_tools.yml

- name: Start Postgres RHEL
  service:
    name: postgresql-11
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Enable and start postgresql service for RHEL based
  service:
    name: postgresql-11
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Enable and start postgresql service for Debian based
  service:
    name: postgresql
    state: started
    enabled: yes
  when: ansible_os_family == "Debian"

- name: Stop postgresql service for RHEL based
  service:
    name: postgresql-11
    state: stopped
  when: ansible_os_family == "RedHat"

- name: Stop postgresql service for Debian based
  service:
    name: postgresql
    state: stopped
  when: ansible_os_family == "Debian"

- name: Disable old repository
  command: percona-release disable {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'FROM_REPO') }}"
    pg_version: "{{ lookup('env', 'FROM_VERSION') }}"

- name: Setup new repository
  command: percona-release enable {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'TO_REPO') }}"
    pg_version: "{{ lookup('env', 'VERSION') }}"

- name: Update apt cache
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install Percona Platform for PostgreSQL 11 packages
  include_tasks: ../../../../tasks/install_ppg11.yml

- name: Start postgresql service for RHEL based
  service:
    name: postgresql-11
    state: started
  when: ansible_os_family == "RedHat"

- name: Start postgresql service for Debian based
  service:
    name: postgresql
    state: started
    enabled: true
  when: ansible_os_family == "Debian"

- name: Display ppg version
  become_user: postgres
  shell: psql -c "select version()"
  register: results

- debug:
      var: results.stdout
