---
# Tasks for test major upgrade for PPG 17 packages

- name: Configure repository
  include_tasks: ../../../tasks/install_percona_release.yml

- name: setup epel release
  yum:
    name: epel-release
    update_cache: yes
    state: present
  when: ansible_os_family == "RedHat"

- name: Setting facts so that they will be persisted in the fact cache
  ansible.builtin.set_fact:
    pg_version_to_install: "{{ lookup('env', 'FROM_VERSION') | replace('ppg-','') }}"

- name: End play on Ubuntu 24
  meta: end_play
  when: ansible_distribution == "Ubuntu" and
   ansible_distribution_major_version == "24" and
   pg_version_to_install | string is version('16.2', '<=', strict=True)

- name: End play on RedHat 10 and 16.9 and older versions
  fail:
    msg: "Stopping execution on rhel 10 because 16.9 and below are not supported."
  when: ansible_os_family == "RedHat" and
   ansible_distribution_major_version == "10" and
   pg_version_to_install | string is version('16.9', '<=', strict=True)

- name: Setup initial (old) repository
  command: percona-release enable {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'FROM_REPO') }}"
    pg_version: "{{ lookup('env', 'FROM_VERSION') }}"

- name: install Percona Platform for PostgreSQL 16 packages
  include_tasks: ../../../../tasks/install_ppg16.yml

- name: Initialize Postgres RHEL
  command: /usr/pgsql-16/bin/postgresql-16-setup initdb
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  when: ansible_os_family == "RedHat"

- name: Install PPG tools
  include_tasks: ../../../../tasks/install_ppg16_tools.yml

- name: Start Postgres RHEL
  service:
    name: postgresql-16
    state: started
    enabled: true
  when: ansible_os_family == "RedHat"

- name: Start postgresql service for Debian based
  service:
    name: postgresql
    state: started
    enabled: true
  when: ansible_os_family == "Debian"

- name: Disable old repository
  command: percona-release disable {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'FROM_REPO') }}"
    pg_version: "{{ lookup('env', 'FROM_VERSION') }}"

- name: Setup new repository
  command: percona-release enable-only {{ pg_version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'TO_REPO') }}"
    pg_version: "{{ lookup('env', 'VERSION') }}"

- name: install Percona Platform for PostgreSQL deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
      - percona-postgresql
      - percona-postgresql-17
      - percona-postgresql-all
      - percona-postgresql-client
      - percona-postgresql-client-17
      - percona-postgresql-common
      - percona-postgresql-contrib
      - percona-postgresql-doc
      - percona-postgresql-doc-17
      - percona-postgresql-plperl-17
      - percona-postgresql-plpython3-17
      - percona-postgresql-pltcl-17
      - percona-postgresql-server-dev-17
      - percona-postgresql-common-dev
      - percona-postgresql-17-dbgsym
      - percona-postgresql-client-17-dbgsym
      - percona-postgresql-plperl-17-dbgsym
      - percona-postgresql-plpython3-17-dbgsym
      - percona-postgresql-pltcl-17-dbgsym
      - postgresql-client-common
      - postgresql-common
  when: ansible_os_family == "Debian"
  environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

# - name: install Percona Platform for PostgreSQL deb packages
#   apt:
#     name: "{{ packages }}"
#     update_cache: yes
#     state: latest
#   vars:
#     packages:
#     - percona-postgresql-plpython3-17
#     - percona-postgresql-plpython3-17-dbgsym
#   when:
#     - ansible_os_family == "Debian"

- name: install Percona Platform for PostgreSQL rpm packages for RHEL
  yum:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-server-dev-all
      - percona-postgresql17
      - percona-postgresql17-contrib
      - percona-postgresql17-debuginfo
      - percona-postgresql17-devel
      - percona-postgresql17-docs
      - percona-postgresql17-libs
      - percona-postgresql17-llvmjit
      - percona-postgresql17-plperl
      - percona-postgresql17-plpython3
      - percona-postgresql17-pltcl
      - percona-postgresql17-server
      - percona-postgresql17-test
      - percona-postgresql17-debuginfo
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

- name: Disable llvm-toolset dnf module for RHEL8
  become: true
  command: dnf module disable llvm-toolset -y
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: install Percona Platform for PostgreSQL rpm packages for RHEL
  yum:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
        - percona-postgresql-client-common
        - percona-postgresql-common
        - percona-postgresql-common-dev
        - percona-postgresql17
        - percona-postgresql17-contrib
        - percona-postgresql17-debuginfo
        - percona-postgresql17-devel
        - percona-postgresql17-docs
        - percona-postgresql17-libs
        - percona-postgresql17-llvmjit
        - percona-postgresql17-plpython3
        - percona-postgresql17-plperl
        - percona-postgresql17-pltcl
        - percona-postgresql17-server
        - percona-postgresql17-test
        - percona-postgresql17-contrib-debuginfo
        - percona-postgresql17-debuginfo
        - percona-postgresql17-debugsource
        - percona-postgresql17-devel-debuginfo
        - percona-postgresql17-libs-debuginfo
        - percona-postgresql17-plperl-debuginfo
        - percona-postgresql17-pltcl-debuginfo
        - percona-postgresql17-plpython3-debuginfo
        - percona-postgresql17-server-debuginfo
  when: ansible_os_family == "RedHat" and
      (ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9")
  environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

- name: Install pg-stat-monitor RHEL
  yum:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
      - percona-pg_stat_monitor17
  when: ansible_os_family == "RedHat"

- name: Install pg-stat-monitor debian
  apt:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
  vars:
    packages:
      - percona-pg-stat-monitor17
  when: ansible_os_family == "Debian"

- name: Initialize Postgres RHEL
  command: /usr/pgsql-17/bin/postgresql-17-setup initdb
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  when: ansible_os_family == "RedHat"

- name: Stop postgresql service for RHEL based
  service:
    name: postgresql-16
    state: stopped
  when: ansible_os_family == "RedHat"

- name: Stop postgresql service for Debian based
  service:
    name: postgresql
    state: stopped
  when: ansible_os_family == "Debian"

- name: Execute pg_createcluster for version 17
  command: /usr/bin/pg_createcluster 17 main --port=5433
  become: true
  become_method: sudo
  become_user: postgres
  when: ansible_os_family == "Debian"

- pause:
    minutes: 1

- name: Execute pg_upgrade RHEL
  command: /usr/pgsql-17/bin/pg_upgrade --old-bindir /usr/pgsql-16/bin --new-bindir /usr/pgsql-17/bin --old-datadir /var/lib/pgsql/16/data --new-datadir /var/lib/pgsql/17/data
  become: true
  become_user: postgres
  args:
    chdir: /tmp
  when: ansible_os_family == "RedHat"

- name: Execute pg_upgrade Deb
  command: /usr/lib/postgresql/17/bin/pg_upgrade --old-datadir=/var/lib/postgresql/16/main --new-datadir=/var/lib/postgresql/17/main --old-bindir=/usr/lib/postgresql/16/bin --new-bindir=/usr/lib/postgresql/17/bin --old-options '-c config_file=/etc/postgresql/16/main/postgresql.conf' --new-options '-c config_file=/etc/postgresql/17/main/postgresql.conf'
  become: true
  become_method: sudo
  become_user: postgres
  args:
    chdir: /tmp
  when: ansible_os_family == "Debian"

- name: Change postgresql 16 port in config Debian
  lineinfile:
    path: /etc/postgresql/16/main/postgresql.conf
    search_string: 'port'
    line: port = 5433
  when: ansible_os_family == "Debian"

- name: Change postgresql 16 port in config RHEL
  lineinfile:
    path: /var/lib/pgsql/16/data/postgresql.conf
    search_string: 'port'
    line: port = 5433
  when: ansible_os_family == "RedHat"

- name: Change postgresql 17 port in config Debian
  lineinfile:
    path: /etc/postgresql/17/main/postgresql.conf
    search_string: 'port'
    line: port = 5432
  when: ansible_os_family == "Debian"

- name: Change postgresql 17 port in config RHEL
  lineinfile:
    path: /var/lib/pgsql/17/data/postgresql.conf
    search_string: 'port'
    line: port = 5432
  when: ansible_os_family == "RedHat"

- name: Add extensions to postgresql.conf for Debian
  lineinfile:
    path: /etc/postgresql/17/main/postgresql.conf
    line: shared_preload_libraries = 'pg_stat_monitor'
  when: ansible_os_family == "Debian"

- name: Add extensions to postgresql.conf for RHEL
  lineinfile:
    path: /var/lib/pgsql/17/data/postgresql.conf
    line: shared_preload_libraries = 'pg_stat_monitor'
  when: ansible_os_family == "RedHat"

- name: Restart postgresql service for RHEL based
  service:
    name: postgresql-17
    state: restarted
    enabled: true
  when: ansible_os_family == "RedHat"

- name: Drop pg_dropcluster for version 16
  command: /usr/bin/pg_dropcluster 16 main
  become: true
  become_method: sudo
  become_user: postgres
  when: ansible_os_family == "Debian"
  register: results

- debug:
    var: results.stdout_lines

- name: list pg_lsclsuters
  command: pg_lsclusters
  become: true
  become_method: sudo
  become_user: postgres
  when: ansible_os_family == "Debian"
  register: results

- debug:
    var: results.stdout_lines

- name: Delete /var/run/postgresql lock and pid file
  command: rm -fr /var/run/postgresql/*
  become: true
  when: ansible_os_family == "Debian"
  register: results

- name: Restart postgresql service for Debian based
  service:
    name: postgresql@17-main.service
    state: restarted
    enabled: true
  when: ansible_os_family == "Debian"

- name: Display ppg version
  become_user: postgres
  shell: psql -c "select version()"
  register: results

- debug: var=results.stdout_lines
